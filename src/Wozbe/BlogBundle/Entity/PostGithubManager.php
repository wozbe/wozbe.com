<?php

namespace Wozbe\BlogBundle\Entity;

use Wozbe\BlogBundle\Entity\Post;
use Wozbe\BlogBundle\Entity\PostGithub;

use Doctrine\Common\Persistence\ObjectManager;

/**
 * PostGithubManager
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostGithubManager
{
    /**
     * @var \Doctrine\Common\Persistence\ObjectManager
     */
    protected $objectManager;
    
    public function __construct(ObjectManager $objectManager) 
    {
        $this->objectManager = $objectManager;
    }
    
    public function addPostGithub(Post $post, $owner, $repo, $path)
    {
        $postGithub = new PostGithub($post, $owner, $repo, $path);
        
        $this->getObjectManager()->persist($postGithub);
        $this->getObjectManager()->flush();
        
        return $postGithub;
    }
    
    public function deletePostGithub(PostGithub $postGithub)
    {
        $objectManager = $this->getObjectManager();
        $objectManager->remove($postGithub);
        $objectManager->flush();
        
        return $postGithub;
    }
    
    public function updatePostFromGithub(PostGithub $postGithub)
    {
        $owner = $postGithub->getOwner();
        $repo = $postGithub->getRepo();
        $path = $postGithub->getPath();
        
        $getContentUrl = sprintf('https://api.github.com/repos/%s/%s/contents/%s', $owner, $repo, $path);
        $getContentResult = json_decode(file_get_contents($getContentUrl));
        
        
        if('base64' !== $getContentResult->encoding) {
            throw new \RuntimeException('Encoding format unkown');
        };
        
        $content = base64_decode($getContentResult->content);
        
        $postGithub->getPost()->setContent($content);
        $postGithub->updated();
        
        $this->getObjectManager()->flush();
        
        return $postGithub;
    }
    
    /**
     * @return \Doctrine\Common\Persistence\ObjectManager
     */
    protected function getObjectManager()
    {
        return $this->objectManager;
    }
}
